---
title: "2023-12-28_Lucia_end_of_year_report"
format: 
  html:
    code-fold: true
editor: visual
toc: true
execute:
  warning: false
  message: false
---

```{r}
set.seed(2023)
easypackages::libraries("DESeq2","Seurat","tidyverse", "SeuratWrappers", "ggExtra", "textTinyR", "patchwork", "pheatmap", "ggrepel", "tidyseurat")

```

```{r, load data, echo=FALSE, message=FALSE, warning=FALSE}

bal_alv_mac <- read_rds( "C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\seurat_obj_experiment_1_bal_alv_macs_with_merged_groups.rds")

bal_alv_mac$virus <- tibble(sampletag_name=bal_alv_mac |> pull(sampletag_name)) |> separate(sampletag_name,into = c("virus")) |> pull("virus")

ms4a3_neg <- bal_alv_mac|> filter(sampletag_Ms4a3=="Ms4a3_neg")
ms4a3_pos <- bal_alv_mac |> filter(sampletag_Ms4a3=="Ms4a3_pos")
#bal_alv_mac <- NULL

```

```{r, functions, echo=FALSE, message=FALSE}
top_markers_named_list_maker <-
  function(markers_tibble, #FindAllMarkers Output
           n_ = 10,
           grouping= cluster,
           p_adj_thresh=0.01) {
    #takes Seurat::FindAllMarkers output  (Wilcoxon test), returns list of top n_ markers by p_val_adj
    marker_gene_list <- markers_tibble |>
      filter(avg_log2FC > 0) |>
      filter(p_val_adj<p_adj_thresh) |> 
      group_by({{grouping}}) |>
      slice_min(p_val_adj, n = n_) |> 
      select({{grouping}}, gene) |>
      summarise(gene = list(gene)) |>
      as.list(gene)
    names(marker_gene_list$gene) <-
      as.character(marker_gene_list[[1]])
    return(marker_gene_list$gene)
  }

dot_heatmap <- function(seurat_obj = ms4a3_pos,
                        named_feature_list = ms4a3_pos_markers_list,
                        limits = c(-2, 2),
                        seurat_grouping = "sampletag_name") {
  #takes a ORDERED named list of features, names are groups in "seurat_grouping", returns heatmap
  named_feature_vec <-  named_feature_list |> unlist()
  named_feature_vec <-
    named_feature_vec[!duplicated(named_feature_vec)] # like "unique()" but without losing names
  group_names_sorted <- names(named_feature_list)
  
  
  tbl <-seurat_obj |> join_features(named_feature_vec, slot = "data", assay = "RNA") |>
    group_by(.feature, .data[[seurat_grouping]]) |>
    summarise(
      mean_data = mean(.abundance_RNA),
      percent_exp = mean(.abundance_RNA > 0)
    ) |>
    group_by(.feature) |>
    mutate(z_score_mean_abundance_over_groups = (mean_data - mean(mean_data)) /
             sd(mean_data)) |>
          mutate(z_score_mean_abundance_over_groups=ifelse(z_score_mean_abundance_over_groups>2,2,z_score_mean_abundance_over_groups)) |>
          mutate(z_score_mean_abundance_over_groups=ifelse(z_score_mean_abundance_over_groups<(-2),(-2),z_score_mean_abundance_over_groups)) |>
    mutate(
      gene = factor(.feature, levels = named_feature_vec),
      "{seurat_grouping}" := factor(.data[[seurat_grouping]], levels = group_names_sorted)
    ) |> 
    arrange(gene)
  
  #browser()
  plt <- tbl |>
    ggplot(aes(gene, .data[[seurat_grouping]],
               color = z_score_mean_abundance_over_groups,
               size = percent_exp)) +
    geom_point() +
    ggplot2::geom_point() +
    ggplot2::guides(
      color = ggplot2::guide_colorbar(
        barwidth  = 18,
        barheight = 1,
        ticks = FALSE,
        frame.colour = "black",
        title.position = "top",
        title.hjust = 0.5
      ),
      size  = ggplot2::guide_legend(title.position = "top", title.hjust = 0.5)
    ) +
    ggplot2::labs(col  = "z-score of mean", size = "% expressed") +
    ggplot2::theme_classic(base_size = 25) +
    ggplot2::theme(
      legend.position = "top",
      axis.text.x     = ggplot2::element_text(
        angle = 45,
        hjust = 1,
        vjust = 1,
        face = "italic"
      ),
      axis.title      = ggplot2::element_blank()
    ) +
    ggplot2::scale_color_distiller(palette = "RdBu", limits = limits) +
    ggplot2::scale_size_area(max_size = 10)
  return(plt)
  
  
}


marker_list_density_plots <- function(marker_list, seurat_object, max_scaled=FALSE) {
  plt_list_data <- list()
  for (i in seq_along(marker_list)) {
    plt_list_data[[i]] <- seurat_object |>
      join_features(marker_list[[i]]) |>
      ggplot(aes(.abundance_RNA, fill = sampletag_name, color = sampletag_name)) +
      facet_wrap( ~ .feature, ncol = 5) +
      ggtitle(names(marker_list)[i]) + theme_minimal()+ylim(0,1.3)
    
    if (max_scaled) {
      plt_list_data[[i]] <- plt_list_data[[i]]+ geom_density(aes(y = after_stat(scaled)), alpha = 0.05)
      }else plt_list_data[[i]] <- plt_list_data[[i]]+ geom_density( alpha = 0.05)
    
    
  }
  return(plt_list_data)
  
}

marker_list_histogram_plots <- function(marker_list, seurat_object) {
  plt_list_counts <- list()
  for (i in seq_along(marker_list)) {
    plt_list_counts[[i]] <- seurat_object |>
      join_features(marker_list[[i]], slot = "counts") |>
      ggplot(aes(.abundance_RNA, fill = sampletag_name, color = sampletag_name)) +
      geom_histogram(aes(y = after_stat(count / sum(count))), alpha = 0.05) +
      facet_wrap(~ .feature,
                 ncol = 5) +
      ggtitle(names(marker_list)[i]) + theme_minimal()
    
  }
  return(plt_list_counts)
}
```

```{r}
 DE_genes <- c("Cxcl9","H2-Q7","Lepr","Igf2bp2","Enpp5","Igf1","Mfge8","Fabp4","Lrg1","Tns3","Hopx","Vstm2a","Serpinb6a","Trim29","Marco","Sema3e","Spag11b","Pbx1","Cldn1","Mfsd6","AW112010","H2-Q6","Hspa1a","Hspa1b","Cd74","H2-Ab1","H2-Aa","H2-Eb1","Ddx3y","Eif2s3y","Btg2","Gpr141","Kdm5d","Cpq","Fn1","Car4","C4b","Nt5e","Cfh","Myrf","Adgrg1","Cited4","Mfsd6","Sobp","Erc2","Wfdc17","Mmp8","Frk","Tcaf1","Tnfsf14","Epas1","Scml4","Ptgs1","Sash1","S100a6","Ifi47","Gm4951","Ifi203","Gbp3","Pou2f2","Uty","Crip1","Ccl9")
```

```{r }
#| fig-width: 12
#| fig-height: 10

DE_genes <- DE_genes |> unique()

de_list <- DE_genes |> as.list()



#m_list_neg <- m_list_neg[order(names(m_list_neg))]
p1 <- dot_heatmap(seurat_obj = bal_alv_mac,
            named_feature_list = de_list,
            
              )
p1


limits = c(-2, 2)
seurat_grouping <-  "sampletag_name"
bal_alv_mac$sampletag_name |> unique()

levels_sampletag_name <- c("MuHV4_Ms4a3_pos" , "MuHV4_Ms4a3_neg", "MAV1_Ms4a3_pos",  "MAV1_Ms4a3_neg",  "PVM_Ms4a3_pos", "PVM_Ms4a3_neg", "PR8_Ms4a3_pos", "PR8_Ms4a3_neg", "Mock_Ms4a3_pos","Mock_Ms4a3_neg" ) 


named_feature_vec <-  de_list |> unlist()
  #named_feature_vec <-
   # named_feature_vec[!duplicated(named_feature_vec)] # like "unique()" but without losing names
  #group_names_sorted <- names(named_feature_list)
  
  
  tbl <-bal_alv_mac |> join_features(named_feature_vec, slot = "data", assay = "RNA") |>
    group_by(.feature, sampletag_name) |>
    summarise(
      mean_data = mean(.abundance_RNA),
      percent_exp = mean(.abundance_RNA > 0)
    ) |>
    group_by(.feature) |>
    mutate(z_score_mean_abundance_over_groups = (mean_data - mean(mean_data)) /
             sd(mean_data)) |>
          mutate(z_score_mean_abundance_over_groups=ifelse(z_score_mean_abundance_over_groups>2,2,z_score_mean_abundance_over_groups)) |>
          mutate(z_score_mean_abundance_over_groups=ifelse(z_score_mean_abundance_over_groups<(-2),(-2),z_score_mean_abundance_over_groups)) |>
    mutate(
      gene = factor(.feature, levels = named_feature_vec),
     sampletag_name:= factor(.data[[seurat_grouping]], levels = levels_sampletag_name)
    ) |> 
    arrange(gene)
  
  #browser()
  plt <- tbl |>
    ggplot(aes(gene, .data[[seurat_grouping]],
               color = z_score_mean_abundance_over_groups,
               size = percent_exp)) +
    geom_point() +
    ggplot2::geom_point() +
    ggplot2::guides(
      color = ggplot2::guide_colorbar(
        barwidth  = 18,
        barheight = 1,
        ticks = FALSE,
        frame.colour = "black",
        title.position = "top",
        title.hjust = 0.5
      ),
      size  = ggplot2::guide_legend(title.position = "top", title.hjust = 0.5)
    ) +
    ggplot2::labs(col  = "z-score of mean", size = "% expressed") +
    ggplot2::theme_classic(base_size = 15) +
    ggplot2::theme(
      legend.position = "top",
      axis.text.x     = ggplot2::element_text(
        angle = 45,
        hjust = 1,
        vjust = 1,
        face = "italic"
      ),
      axis.title      = ggplot2::element_blank()
    ) +
    ggplot2::scale_color_distiller(palette = "RdBu", limits = limits) +
    ggplot2::scale_size_area(max_size = 10)
```

```{r}
plt+ coord_flip()
```

```{r}
bal_alv_mac <- bal_alv_mac |>     mutate(sampletag_name= factor(sampletag_name, levels = levels_sampletag_name))

cells <- bal_alv_mac |> group_by(sampletag_name) |> slice_sample(n=300) |> pull(.cell)

DoHeatmap(object = bal_alv_mac, group.by = "sampletag_name", cells=cells, features=DE_genes) + scale_fill_gradientn(colors = c("blue", "white", "red"))
```
