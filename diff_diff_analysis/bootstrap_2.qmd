---
title: "bootstrap_2"
format: html
editor: visual
---

## Bootstrapping Confindence Intervals for "Difference in Differnece" of scRNA-Seq Data

```{r}
easypackages::libraries("modelr", "tidyverse","Seurat", "tidyseurat", "ggridges", "ggpointdensity", "magrittr", "MASS", "broom")
bal_alv_mac <- read_rds( "C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\seurat_obj_experiment_1_bal_alv_macs_with_merged_groups.rds")
bal_alv_mac$virus <- tibble(sampletag_name=bal_alv_mac |> pull(sampletag_name)) |> separate(sampletag_name,into = c("virus")) |> pull("virus")
```

```{r}
choose_values_virus_Ms4a3 <- function(seurat_obj, gene,
                                      virus_cond_1,
                                      virus_cond_2,
                                      slot="data",
                                      downsample=F,#samples down wholes seurat_object
                                      downsample_discrete=F,#samples down seurat_object with specified amounts cells for all 4 comparison goups
                                      downsample_discrete_value=100,
                                      downsample_faction=0.5) {
        if (downsample_discrete&downsample) {simpleError("downsample_discrete and downsample can't both be true")
                
        }
        
        if (downsample) {seurat_obj <- seurat_obj |> slice_sample(n=(round(ncol(seurat_obj)*downsample_faction)))
        print(paste0("downsampled to ", as.character(ncol(seurat_obj))))
                
        }
        
        if (downsample_discrete) {
                barcodes_to_keep  <- seurat_obj |> filter(virus %in% c(virus_cond_1,virus_cond_2 )) |>
                group_by(virus,sampletag_Ms4a3) |>
                        slice_sample(n=downsample_discrete_value) |> pull(.cell)
                seurat_obj <- subset(seurat_obj, cells =barcodes_to_keep )

        print(paste0("downsampled to ", as.character(ncol(seurat_obj)), " in 4 groups"))
                
        }
        
        dat_A_x <- seurat_obj |>  filter(virus==virus_cond_1 & sampletag_Ms4a3=="Ms4a3_pos")
        dat_A_y <- seurat_obj |>  filter(virus==virus_cond_1 & sampletag_Ms4a3=="Ms4a3_neg")
        dat_B_x <- seurat_obj |>  filter(virus==virus_cond_2 & sampletag_Ms4a3=="Ms4a3_pos")
        dat_B_y <- seurat_obj |>  filter(virus==virus_cond_2 & sampletag_Ms4a3=="Ms4a3_neg")
        
        if (slot=="data") {
                        gene_index_A <- which(gene == rownames(dat_A_x))[[1]]
        values_A_x <- dat_A_x@assays$RNA@layers$data[gene_index_A,]
        # values_A_x <- tibble(values=dat_A_x@assays$RNA@layers$data[gene_index_A,],
        # name=paste0(virus_cond_1,"_", "Ms4a3_pos"))
        
        
        gene_index_A <- which(gene == rownames(dat_A_y))[[1]]
        values_A_y <- dat_A_y@assays$RNA@layers$data[gene_index_A,]
        # values_A_y <- tibble(values=dat_A_x@assays$RNA@layers$data[gene_index_A,],
        # name=paste0(virus_cond_1,"_", "Ms4a3_neg"))
        

        gene_index_B <- which(gene == rownames(dat_B_x))[[1]]
        values_B_x <- dat_B_x@assays$RNA@layers$data[gene_index_B,]
        gene_index_B <- which(gene == rownames(dat_B_y))[[1]]
        values_B_y <- dat_B_y@assays$RNA@layers$data[gene_index_B,]
        print("slot data")

        }

        
                if (slot=="counts") {
                        gene_index_A <- which(gene == rownames(dat_A_x))[[1]]
        values_A_x <- dat_A_x@assays$RNA@layers$counts[gene_index_A,]
        # values_A_x <- tibble(values=dat_A_x@assays$RNA@layers$counts[gene_index_A,],
        # name=paste0(virus_cond_1,"_", "Ms4a3_pos"))
        
        
        gene_index_A <- which(gene == rownames(dat_A_y))[[1]]
        values_A_y <- dat_A_y@assays$RNA@layers$counts[gene_index_A,]
        # values_A_y <- tibble(values=dat_A_x@assays$RNA@layers$counts[gene_index_A,],
        # name=paste0(virus_cond_1,"_", "Ms4a3_neg"))
        
        
        
        gene_index_B <- which(gene == rownames(dat_B_x))[[1]]
        values_B_x <- dat_B_x@assays$RNA@layers$counts[gene_index_B,]
        
        
        gene_index_B <- which(gene == rownames(dat_B_y))[[1]]
        values_B_y <- dat_B_y@assays$RNA@layers$counts[gene_index_B,]
        print("slot counts")

        }
        
        
        output_lst <- list(values_A_x,values_A_y,values_B_x,values_B_y)
        return(output_lst)
        
        
}


sample_mean <- function(value_vec,length_fraction=1){#samples a vector of same size as input vector and takes mean
 
                sample(value_vec , size = length(value_vec)*length_fraction,replace = T) |> mean()
        
}


bootstrap_mean <- function(x,reps=10000, length_fraction=1){
        
        
        print("bootstrap mean calculated")
        return(replicate(reps,sample_mean(x,length_fraction)))
        
}


fc_plot <-function(dat, x,y,contrast)
        
{         ggplot(data = dat,aes({{x}},{{y}},color={{contrast}}))+
        geom_density_2d(contour_var = "ndensity") +  
                geom_abline(intercept = 0, slope = 1, color="black", linetype="dashed",linewidth=1)+
                geom_vline(xintercept =  0,  color="black")+
                geom_hline(yintercept =  0,  color="black")+
                xlim(c(-2,2))+ylim(c(-2,2))+
                theme_bw()
        }

make_2x2_bootstrap_means <- function(seurat_obj,
                                     gene,
                                     virus_cond_1,
                                     virus_cond_2,
                                     interations,
                                     length_fraction,
                                     downsample=F,
                                     downsample_faction=0.5,
                                     slot="data",
                                     downsample_discrete=F,
                                     downsample_discrete_value){
        
        gene_values_4 <- choose_values_virus_Ms4a3(seurat_obj,
                                            gene = gene,
                                            virus_cond_1 = virus_cond_1,
                                            virus_cond_2 = virus_cond_2,
                                            downsample=downsample,
                                            downsample_faction,
                                            slot=slot,
                                            downsample_discrete=downsample_discrete,
                                            downsample_discrete_value=downsample_discrete_value)
        
        print("values loaded")
        
        bootstrap_mean_list_4 <- map(gene_values_4,
                     \(x) bootstrap_mean(x,
                                         reps = interations,
                                         length_fraction = length_fraction)
                     )
        #dings <- map(gene_4,\(x) bootstrap_mean(x, reps = p, length_fraction = 0.1))
        names(bootstrap_mean_list_4) <- c("a_x","a_y","b_x","b_y")# |> map_chr(\(x) paste(x, gene, sep="_"))
        bootstrap_mean_list_4[[5]] <- gene
        return(bootstrap_mean_list_4)

}


plot_both_fc <- function(
                mean_lst,
         contrast_a="a",
         constrat_b="b"){
          tibble(x=mean_lst[[1]],y=mean_lst[[2]],contrast=contrast_a) |>
        bind_rows(tibble(x=mean_lst[[3]],y=mean_lst[[4]],contrast=constrat_b)) |>  fc_plot(x,y,contrast)
        
}
```


```{r}
gene_vec <- c("Gabbr2", "Adamts9","Tmem163","Itgal","Pmepa1","Cd63", "Fabp4","Tcaf1","Ly86", "Spp1", "Cd93", "Cd36", "Siglecf")

mean_tbl <- tibble()
for (i in seq_along(gene_vec)) {
        print(gene_vec[i])
        gene_mean_lst <- make_2x2_bootstrap_means(seurat_obj=bal_alv_mac,
                                     gene = gene_vec[i],
                                     virus_cond_1 = "PR8",
                                     virus_cond_2 = "Mock",
                                     interations = 10000,
                                     length_fraction = 1)
        mean_tbl <- tibble(gene_mean_lst[[1]],gene_mean_lst[[2]],gene_mean_lst[[3]],gene_mean_lst[[4]],gene=gene_vec[i]) |> bind_rows(mean_tbl)
        
        
}

mean_tbl_half <- tibble()
for (i in seq_along(gene_vec)) {
        print(gene_vec[i])
        gene_mean_lst <- make_2x2_bootstrap_means(seurat_obj=bal_alv_mac,
                                     gene = gene_vec[i],
                                     virus_cond_1 = "PR8",
                                     virus_cond_2 = "Mock",
                                     interations = 10000,
                                     length_fraction = 1,
                                     downsample = T,
                                     downsample_faction = 0.1,
                                     slot="data",
                                     )
        mean_tbl_half <- tibble(gene_mean_lst[[1]],gene_mean_lst[[2]],gene_mean_lst[[3]],gene_mean_lst[[4]],gene=gene_vec[i]) |> bind_rows(mean_tbl_half)
        
      
}

names(mean_tbl) <- c("a_x","a_y","b_x","b_y","gene")
mean_tbl|> #filter(gene=="Spp1") |>
        mutate(mean_diff_a=a_x-a_y,
                 mean_diff_b=b_x-b_y ) |>
        fc_plot(mean_diff_a,mean_diff_b,gene)

#write_rds(mean_tbl,"C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\fc_fc_bootstrap_mean_tbl.rds")

names(mean_tbl_half) <- c("a_x","a_y","b_x","b_y","gene")
mean_tbl_half|> #filter(gene=="Spp1") |>
        mutate(mean_diff_a=a_x-a_y,
                 mean_diff_b=b_x-b_y ) |>
        fc_plot(mean_diff_a,mean_diff_b,gene)
```
```{r}
#### functioanl
markers_roc <- read_csv( "C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\seurat_obj_experiment_1_bal_alv_mac_markers_roc.csv")
gene_vec <- markers_roc |> filter(power>0.2&abs(avg_log2FC)>1) |> pull(gene) |> unique() |> sort()

make_per_gene_2x2_bootstrap_means <- function(gene_vec, condition) {
        mean_tbl_ <- tibble()
        for (i in seq_along(gene_vec)) {
                
                print(paste0("----", gene_vec[i]))
                gene_mean_lst <-
                        make_2x2_bootstrap_means(
                                seurat_obj = bal_alv_mac,
                                gene = gene_vec[i],
                                virus_cond_1 = condition,
                                virus_cond_2 = "Mock",
                                interations = 1000,
                                length_fraction = 1,
                                downsample_discrete = T,
                                downsample_discrete_value = sample_group_size
                        )
                mean_tbl_ <-
                        tibble(
                                gene_mean_lst[[1]],
                                gene_mean_lst[[2]],
                                gene_mean_lst[[3]],
                                gene_mean_lst[[4]],
                                gene = gene_vec[i]
                        ) |> bind_rows(mean_tbl_)
                
                
        }
        return(mean_tbl_)
}



codition_vector <- bal_alv_mac$virus |> unique()
bootstrap_mean_ddfc_all_cond_downsample_size <- tibble()
for (sample_group_size in c(50, 200, 700)) {
        bootstrap_mean_ddfc_all_cond_downsample <- tibble()
        for (condition in codition_vector) {
                print(paste("----------------------",condition))
                mean_tbl <- make_per_gene_2x2_bootstrap_means(gene_vec,condition = condition)

                mean_tbl <- mean_tbl |> mutate(condition = condition)
                bootstrap_mean_ddfc_all_cond_downsample <-
                        bind_rows(bootstrap_mean_ddfc_all_cond_downsample,
                                  mean_tbl)
        }
        bootstrap_mean_ddfc_all_cond_downsample <-
                bootstrap_mean_ddfc_all_cond_downsample |> mutate(sample_group_size = sample_group_size)
        bootstrap_mean_ddfc_all_cond_downsample_size <-
                bind_rows(
                        bootstrap_mean_ddfc_all_cond_downsample_size,
                        bootstrap_mean_ddfc_all_cond_downsample
                )
}
names(bootstrap_mean_ddfc_all_cond_downsample_size) <- c("a_x","a_y","b_x","b_y","gene","condition","group_size")
bootstrap_mean_ddfc_all_cond_downsample_size_50_genes <- bootstrap_mean_ddfc_all_cond_downsample_size
write_rds(bootstrap_mean_ddfc_all_cond_downsample_size_50_genes,"C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\bootstrap_mean_ddfc_all_cond_downsample_size_50_genes.rds")

```


```{r for all viruses}

gene_vec <- c("Gabbr2", "Adamts9"#,"Tmem163","Itgal","Pmepa1","Cd63", "Fabp4","Tcaf1","Ly86", "Spp1", "Cd93", "Cd36", "Siglecf"
              )
##---no downsampling
bootstrap_mean_ddfc_all_cond_full <- tibble()
codition_vector <- bal_alv_mac$virus |> unique()
for (condition in codition_vector) {
        print(condition)
        mean_tbl <- tibble()
        for (i in seq_along(gene_vec)) {
        print(gene_vec[i])
        gene_mean_lst <- make_2x2_bootstrap_means(seurat_obj=bal_alv_mac,
                                     gene = gene_vec[i],
                                     virus_cond_1 = condition,
                                     virus_cond_2 = "Mock",
                                     interations = 10000,
                                     length_fraction = 1)
        mean_tbl <- tibble(gene_mean_lst[[1]],gene_mean_lst[[2]],gene_mean_lst[[3]],gene_mean_lst[[4]],gene=gene_vec[i]) |> bind_rows(mean_tbl)
        
        
}
        mean_tbl <- mean_tbl |> mutate(condition=condition)
        bootstrap_mean_ddfc_all_cond_full <- bind_rows(bootstrap_mean_ddfc_all_cond_full,mean_tbl)
}
names(bootstrap_mean_ddfc_all_cond_full) <- c("a_x","a_y","b_x","b_y","gene","condition")
bootstrap_mean_ddfc_all_cond_full
write_rds(bootstrap_mean_ddfc_all_cond_full,"C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\bootstrap_mean_ddfc_all_cond_full.rds")







##--- downsampling per group

codition_vector <- bal_alv_mac$virus |> unique()
bootstrap_mean_ddfc_all_cond_downsample_size <- tibble()
for (sample_group_size in c(50, 100, 200, 300, 400)) {
        for (condition in codition_vector) {
                print(condition)
                mean_tbl <- tibble()
                bootstrap_mean_ddfc_all_cond_downsample <- tibble()
                for (i in seq_along(gene_vec)) {#gene
                        print(gene_vec[i])
                        gene_mean_lst <-
                                make_2x2_bootstrap_means(
                                        seurat_obj = bal_alv_mac,
                                        gene = gene_vec[i],
                                        virus_cond_1 = condition,
                                        virus_cond_2 = "Mock",
                                        interations = 10000,
                                        length_fraction = 1,
                                        downsample_discrete = T,
                                        downsample_discrete_value = sample_group_size
                                )
                        mean_tbl <-
                                tibble(
                                        gene_mean_lst[[1]],
                                        gene_mean_lst[[2]],
                                        gene_mean_lst[[3]],
                                        gene_mean_lst[[4]],
                                        gene = gene_vec[i]
                                ) |> bind_rows(mean_tbl)
                        
                        
                }
                mean_tbl <- mean_tbl |> mutate(condition = condition)
                bootstrap_mean_ddfc_all_cond_downsample <-
                        bind_rows(bootstrap_mean_ddfc_all_cond_downsample,
                                  mean_tbl)
        }
        bootstrap_mean_ddfc_all_cond_downsample <-
                bootstrap_mean_ddfc_all_cond_downsample |> mutate(sample_group_size = sample_group_size)
        bootstrap_mean_ddfc_all_cond_downsample_size <-
                bind_rows(
                        bootstrap_mean_ddfc_all_cond_downsample_size,
                        bootstrap_mean_ddfc_all_cond_downsample
                )
}



names(bootstrap_mean_ddfc_all_cond_downsample_size) <- c("a_x","a_y","b_x","b_y","gene","condition","group_size")
bootstrap_mean_ddfc_all_cond_downsample_size
write_rds(bootstrap_mean_ddfc_all_cond_downsample_size,"C:\\Users\\danne\\R_projects\\machiels_lab_viral\\intermediate_data\\bootstrap_mean_ddfc_all_cond_downsample_size.rds")


```
```{r}
bal_alv_mac |>  dplyr::select(virus,sampletag_Ms4a3) |> ggplot(aes(virus,fill=sampletag_Ms4a3))+geom_bar()+theme_minimal()
bal_alv_mac |> mutate(sampletag_Ms4a3="dings")

```

```{r}
bal_alv_mac |> join_features(gene_vec) |> select(.feature,.abundance_RNA,nCount_RNA) |> group_by(.feature) |> slice_max(n=100,order_by = .abundance_RNA) |> ggplot(aes(nCount_RNA,.feature, fill=.feature))+ggridges::geom_density_ridges()


bal_alv_mac |> join_features(gene_vec) |> select(.feature,.abundance_RNA,nCount_RNA) |> group_by(.feature) |> slice_max(n=100,order_by = .abundance_RNA) |> mutate(.feature=factor(.feature, levels=gene_vec)) |> 
        ggplot(aes(nCount_RNA,.feature, fill=.feature))+geom_boxplot()


bal_alv_mac |> join_features(gene_vec) |> select(.feature,.abundance_RNA,nCount_RNA) |> ggplot(aes(nCount_RNA,.abundance_RNA,color=.feature))+geom_smooth(method='lm')+theme_minimal()


bal_alv_mac |> join_features("Spp1") |> select(.feature,.abundance_RNA,nCount_RNA) |> ggplot(aes(nCount_RNA,.abundance_RNA))+geom_point()+geom_smooth(method='loess')+theme_minimal()


bal_alv_mac |> join_features("Spp1") |> filter(virus=="PR8")|> select(.feature,.abundance_RNA,nCount_RNA) |> ggplot(aes(nCount_RNA,.abundance_RNA))+geom_point()+geom_smooth(method='loess')+theme_minimal() +ggtitle("PR8")

bal_alv_mac |> join_features("Spp1") |> select(.feature,.abundance_RNA,nCount_RNA) |> ggplot(aes(nCount_RNA,.abundance_RNA))+geom_pointdensity()+
        geom_smooth(method='loess')+theme_minimal()

bal_alv_mac |> join_features("Spp1", slot="counts") |># select(.feature,.abundance_RNA,nCount_RNA) |>
        ggplot(aes(nCount_RNA,.abundance_RNA))+geom_density_2d()+
        geom_smooth(method = "glm.nb")+theme_minimal()


bal_alv_mac |> join_features("Spp1", slot="data") |># select(.feature,.abundance_RNA,nCount_RNA) |>
        ggplot(aes(nCount_RNA,.abundance_RNA))+geom_density_2d()+
        geom_smooth(method = "lm")+theme_minimal()


bal_alv_mac |> join_features("Spp1", slot="counts") |># select(.feature,.abundance_RNA,nCount_RNA) |>
        ggplot(aes(nCount_RNA,.abundance_RNA))+geom_pointdensity()+
        geom_smooth(method = "lm")+theme_minimal()+ylim(0,20)


bal_alv_mac |> join_features("Spp1", slot="counts") |># select(.feature,.abundance_RNA,nCount_RNA) |>
        ggplot(aes(nCount_RNA,.abundance_RNA))+geom_pointdensity()+
        geom_smooth(method = "glm.nb")+theme_minimal()+ylim(0,20)
```
```{r}
bal_alv_mac |> mutate(sampletag_name=factor(sampletag_name, levels=sort(unique(sampletag_name))))|> ggplot(aes(nCount_RNA,sampletag_name, fill=sampletag_name))+geom_boxplot()
```
if a diffenerce in the expression of Spp1 between Mo-Am and AM is only senn for cells with high gene content then it could confound the PR-Mock DiD

```{r}

spp1_lst <- make_2x2_bootstrap_means(seurat_obj=bal_alv_mac,
                                     gene = "Spp1",
                                     virus_cond_1 = "PR8",
                                     virus_cond_2 = "Mock",
                                     interations = 10000,
                                     length_fraction = 1)

spp1_lst_0.1 <- make_2x2_bootstrap_means(seurat_obj=bal_alv_mac,
                                     gene = "Spp1",
                                     virus_cond_1 = "PR8",
                                     virus_cond_2 = "Mock",
                                     interations = 10000,
                                     length_fraction = 0.1)


spp1_lst_0.1 |> plot_both_fc()


tibble(x=spp1_lst[[1]],y=spp1_lst[[2]],contrast="a") |>
        bind_rows(tibble(x=spp1_lst[[3]],y=spp1_lst[[4]],contrast="b")) |> fc_plot(x,y,contrast)



tbl <- tibble(spp1_lst[[1]],spp1_lst[[2]],spp1_lst[[3]],spp1_lst[[4]])
names(tbl) <- names(spp1_lst)

tbl |> transmute(mean_diff_a=a_x-a_y,
                 mean_diff_b=b_x-b_y ) |> mutate(contrast="none") |> fc_plot(mean_diff_a,mean_diff_b,contrast)

```

```{r}
spp1 <- choose_values_virus_Ms4a3(bal_alv_mac,gene = "Spp1",virus_cond_1 = "PR8",virus_cond_2 = "Mock")

spp1_counts <- choose_values_virus_Ms4a3(bal_alv_mac,gene = "Spp1",virus_cond_1 = "PR8",virus_cond_2 = "Mock", slot = "counts")


a_x <- replicate(10000,
          sample_mean(spp1[[1]])
       )
a_y <-  replicate(10000,
          sample_mean(spp1[[2]])
       )

b_x <- replicate(10000,
          sample_mean(spp1[[3]])
       )

b_y <-  replicate(10000,
          sample_mean(spp1[[4]])
       )
tbl <- tibble(a_x,a_y,b_x,b_y) 



tibble(x=a_x,y=a_y,contrast="a") |> bind_rows(tibble(x=b_x,y=b_y,contrast="b")) |> fc_plot(x,y,contrast)

tbl |> transmute(mean_diff_a=a_x-a_y,mean_diff_b=b_x-b_y ) |> mutate(contrast="none") |> fc_plot(mean_diff_a,mean_diff_b,contrast)

##roling average of sample means
install.packages("zoo")

```
```{r}

Epcam <- choose_values_virus_Ms4a3(bal_alv_mac,gene = "Epcam",virus_cond_1 = "PR8",virus_cond_2 = "Mock")



a_x <- replicate(10000,
          bootstrap_mean(Epcam[[1]])
       )
a_y <-  replicate(10000,
          bootstrap_mean(Epcam[[2]])
       )

b_x <- replicate(10000,
          bootstrap_mean(Epcam[[3]])
       )

b_y <-  replicate(10000,
          bootstrap_mean(Epcam[[4]])
       )
tbl <- tibble(a_x,a_y,b_x,b_y) 



tibble(x=a_x,y=a_y,contrast="a") |> bind_rows(tibble(x=b_x,y=b_y,contrast="b")) |> fc_plot(x,y,contrast)

tbl |> transmute(mean_diff_a=a_x-a_y,mean_diff_b=b_x-b_y ) |> mutate(contrast="none") |> fc_plot(mean_diff_a,mean_diff_b,contrast)

```

```{r Gabbr2}

Gabrr2_counts <- choose_values_virus_Ms4a3(bal_alv_mac,gene = "Gabrr2",virus_cond_1 = "PR8",virus_cond_2 = "Mock", slot = "counts")

Gabrr2 <- choose_values_virus_Ms4a3(bal_alv_mac,gene = "Gabrr2",virus_cond_1 = "PR8",virus_cond_2 = "Mock", slot = "data")


a_x <- replicate(10000,
          bootstrap_mean(Gabrr2[[1]])
       )
a_y <-  replicate(10000,
          bootstrap_mean(Gabrr2[[2]])
       )

b_x <- replicate(10000,
          bootstrap_mean(Gabrr2[[3]])
       )

b_y <-  replicate(10000,
          bootstrap_mean(Gabrr2[[4]])
       )
tbl <- tibble(a_x,a_y,b_x,b_y) 



tibble(x=a_x,y=a_y,contrast="a") |> bind_rows(tibble(x=b_x,y=b_y,contrast="b")) |> fc_plot(x,y,contrast)

tbl |> transmute(mean_diff_a=a_x-a_y,mean_diff_b=b_x-b_y ) |> mutate(contrast="none") |> fc_plot(mean_diff_a,mean_diff_b,contrast)

```

```{r Adamts9}

Adamts9 <- choose_values_virus_Ms4a3(bal_alv_mac,gene = "Adamts9",virus_cond_1 = "PR8",virus_cond_2 = "Mock")



a_x <- replicate(10000,
          bootstrap_mean(Adamts9[[1]])
       )
a_y <-  replicate(10000,
          bootstrap_mean(Adamts9[[2]])
       )

b_x <- replicate(10000,
          bootstrap_mean(Adamts9[[3]])
       )

b_y <-  replicate(10000,
          bootstrap_mean(Adamts9[[4]])
       )
tbl <- tibble(a_x,a_y,b_x,b_y) 



tibble(x=a_x,y=a_y,contrast="a") |> bind_rows(tibble(x=b_x,y=b_y,contrast="b")) |> fc_plot(x,y,contrast)

tbl |> transmute(mean_diff_a=a_x-a_y,mean_diff_b=b_x-b_y ) |> mutate(contrast="none") |> fc_plot(mean_diff_a,mean_diff_b,contrast)

```
